{"version":3,"file":"static/js/736.efcf1219.chunk.js","mappings":"8MAEaA,EAAW,CACtBC,QAAS,mCACTC,SAAS,gCAETC,YAAY,WAAD,wBAAE,oGACoBC,EAAAA,EAAAA,IAAA,UAC1BJ,EAASE,SADiB,qCACoBF,EAASC,UAFjD,cACLI,EADK,gBAKEA,EAAiBC,KAAKC,QALxB,mFAAF,kDAAC,GAQZC,eAAe,WAAD,wBAAE,WAAMC,GAAN,uFACYL,EAAAA,EAAAA,IAAA,UACrBJ,EAASE,SADY,gCACoBF,EAASC,QAD7B,kBAC8CQ,IAF1D,cACRC,EADQ,yBAIPA,EAAYJ,KAAKC,SAJV,2CAAF,mDAAC,GAOfI,gBAAgB,WAAD,wBAAE,WAAMC,GAAN,uFACYR,EAAAA,EAAAA,IAAA,UACtBJ,EAASE,SADa,iBACIU,EADJ,oBACuBZ,EAASC,UAF5C,cACTY,EADS,yBAIRA,EAAaP,MAJL,2CAAF,mDAAC,GAMhBQ,gBAAgB,WAAD,wBAAE,WAAMF,GAAN,uFACYR,EAAAA,EAAAA,IAAA,UACtBJ,EAASE,SADa,iBACIU,EADJ,4BAC+BZ,EAASC,UAFpD,cACTc,EADS,yBAIRA,EAAaT,MAJL,2CAAF,mDAAC,GAOhBU,gBAAgB,WAAD,wBAAE,WAAMJ,GAAN,uFACYR,EAAAA,EAAAA,IAAA,UACtBJ,EAASE,SADa,iBACIU,EADJ,4BAC+BZ,EAASC,UAFpD,cACTc,EADS,yBAIRA,EAAaT,KAAKC,SAJV,2CAAF,mDAAC,G,2FChCLU,E,OAAWC,EAAAA,GAAH,gI,kBCmBrB,EAlBa,WACX,OAAmBC,EAAAA,EAAAA,GAAS,QAArBC,GAAP,eAEA,OACE,SAACH,EAAD,UACuB,IAApBG,EAASC,QACRD,EAASE,KAAKC,KAAI,SAAAD,GAAI,OACpB,2BACE,wBAAKA,EAAKE,QACV,uCACcF,EAAKG,cADnB,IACmCH,EAAKI,eAHjCJ,EAAKK,GADM,KAU7B,C,yHCfYR,EAAW,SAAAS,GACtB,OAA0BC,EAAAA,EAAAA,UAAkB,YAATD,EAAqB,CAAC,EAAI,IAA7D,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA6BR,OA3BAE,EAAAA,EAAAA,YAAU,WACR,IACE,GAAa,SAATN,EAIF,YAHA,iBAAC,0FACCG,EADD,SACgB/B,EAAAA,EAAAA,gBAAyBgC,GADzC,4EAAD,GAMF,GAAa,YAATJ,EAIF,YAHA,iBAAC,0FACCG,EADD,SACgB/B,EAAAA,EAAAA,gBAAyBgC,GADzC,4EAAD,GAMF,GAAa,YAATJ,EAIF,YAHA,iBAAC,0FACCG,EADD,SACgB/B,EAAAA,EAAAA,gBAAyBgC,GADzC,4EAAD,EAOH,CAFC,MAAOG,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACH,EAASJ,IAEN,CAACE,EACT,C","sources":["API/API.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","hooks/useMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const MovieAPI = {\n  API_KEY: 'de43d67db1c628887eb86e6b3184ef59',\n  BASE_URL: `https://api.themoviedb.org/3/`,\n\n  getTrending: async () => {\n    const trendingForToday = await axios.get(\n      `${MovieAPI.BASE_URL}/trending/all/day?api_key=${MovieAPI.API_KEY}`\n    );\n\n    return await trendingForToday.data.results;\n  },\n\n  getMovieByName: async movieName => {\n    const movieByName = await axios.get(\n      `${MovieAPI.BASE_URL}search/movie?api_key=${MovieAPI.API_KEY}&query=${movieName}`\n    );\n    return movieByName.data.results;\n  },\n\n  getMovieDetails: async movieID => {\n    const movieDetails = await axios.get(\n      `${MovieAPI.BASE_URL}movie/${movieID}?api_key=${MovieAPI.API_KEY}`\n    );\n    return movieDetails.data;\n  },\n  getMovieCredits: async movieID => {\n    const movieCredits = await axios.get(\n      `${MovieAPI.BASE_URL}movie/${movieID}/credits?api_key=${MovieAPI.API_KEY}`\n    );\n    return movieCredits.data;\n  },\n\n  getMovieReviews: async movieID => {\n    const movieCredits = await axios.get(\n      `${MovieAPI.BASE_URL}movie/${movieID}/reviews?api_key=${MovieAPI.API_KEY}`\n    );\n    return movieCredits.data.results;\n  },\n};\n\n// (async () => {\n//   console.log(await MovieAPI.getMovieReviews('713704'));\n// })();\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    border-bottom: 1px solid #000000;\n  }\n`;\n","import { CastList } from './Cast.styled';\nimport { useMovie } from 'hooks/useMovie';\n\nconst Cast = () => {\n  const [castList] = useMovie('Cast');\n\n  return (\n    <CastList>\n      {castList.length !== 0 &&\n        castList.cast.map(cast => (\n          <li key={cast.id}>\n            <h4>{cast.name}</h4>\n            <p>\n              Character: {cast.original_name}/{cast.character}\n            </p>\n          </li>\n        ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MovieAPI } from 'API/API';\n\nexport const useMovie = type => {\n  const [state, setState] = useState(type === 'Details' ? {} : []);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      if (type === 'Cast') {\n        (async () => {\n          setState(await MovieAPI.getMovieCredits(movieId));\n        })();\n        return;\n      }\n\n      if (type === 'Reviews') {\n        (async () => {\n          setState(await MovieAPI.getMovieReviews(movieId));\n        })();\n        return;\n      }\n\n      if (type === 'Details') {\n        (async () => {\n          setState(await MovieAPI.getMovieDetails(movieId));\n        })();\n        return;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId, type]);\n\n  return [state];\n};\n"],"names":["MovieAPI","API_KEY","BASE_URL","getTrending","axios","trendingForToday","data","results","getMovieByName","movieName","movieByName","getMovieDetails","movieID","movieDetails","getMovieCredits","movieCredits","getMovieReviews","CastList","styled","useMovie","castList","length","cast","map","name","original_name","character","id","type","useState","state","setState","movieId","useParams","useEffect","error","console","log"],"sourceRoot":""}