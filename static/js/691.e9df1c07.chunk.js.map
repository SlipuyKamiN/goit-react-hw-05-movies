{"version":3,"file":"static/js/691.e9df1c07.chunk.js","mappings":"8MAEaA,EAAW,CACtBC,QAAS,mCACTC,SAAS,gCAETC,YAAY,WAAD,wBAAE,oGACoBC,EAAAA,EAAAA,IAAA,UAC1BJ,EAASE,SADiB,qCACoBF,EAASC,UAFjD,cACLI,EADK,gBAKEA,EAAiBC,KAAKC,QALxB,mFAAF,kDAAC,GAQZC,eAAe,WAAD,wBAAE,WAAMC,GAAN,uFACYL,EAAAA,EAAAA,IAAA,UACrBJ,EAASE,SADY,gCACoBF,EAASC,QAD7B,kBAC8CQ,IAF1D,cACRC,EADQ,yBAIPA,EAAYJ,KAAKC,SAJV,2CAAF,mDAAC,GAOfI,gBAAgB,WAAD,wBAAE,WAAMC,GAAN,uFACYR,EAAAA,EAAAA,IAAA,UACtBJ,EAASE,SADa,iBACIU,EADJ,oBACuBZ,EAASC,UAF5C,cACTY,EADS,yBAIRA,EAAaP,MAJL,2CAAF,mDAAC,GAMhBQ,gBAAgB,WAAD,wBAAE,WAAMF,GAAN,uFACYR,EAAAA,EAAAA,IAAA,UACtBJ,EAASE,SADa,iBACIU,EADJ,4BAC+BZ,EAASC,UAFpD,cACTc,EADS,yBAIRA,EAAaT,MAJL,2CAAF,mDAAC,GAOhBU,gBAAgB,WAAD,wBAAE,WAAMJ,GAAN,uFACYR,EAAAA,EAAAA,IAAA,UACtBJ,EAASE,SADa,iBACIU,EADJ,4BAC+BZ,EAASC,UAFpD,cACTc,EADS,yBAIRA,EAAaT,KAAKC,SAJV,2CAAF,mDAAC,G,sKChCLU,EAAQC,EAAAA,EAAAA,MAAH,uHAOLC,EAAcD,EAAAA,EAAAA,MAAH,sLAYXE,EAAcF,EAAAA,EAAAA,GAAH,8Q,SC0CxB,EA1De,WAAO,IAAD,EACnB,GAAsCG,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAsCP,EAAAA,EAAAA,UAASM,GAA/C,eAAOE,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,OAUjBC,EAAAA,EAAAA,YAAU,WACHJ,IAIL,iBAAC,0FACCN,EADD,SACsBvB,EAAAA,EAAAA,eAAwB6B,GAD9C,4EAAD,EAGD,GAAE,CAACA,IAEJ,IAAMK,EAAgB,mCAAG,WAAMC,GAAN,iEACvBA,EAAMC,iBACNN,EAAeH,GAFQ,2CAAH,sDAKtB,OACE,iCACE,kBAAMU,aAAa,MAAMC,SAAUJ,EAAnC,WACE,SAACjB,EAAD,CACEsB,KAAK,OACLC,KAAK,QACLC,MAAOd,EACPe,SA9BkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,GAA4B,KAAxBA,EAAOF,MAAMG,OACf,OAAOlB,EAAgB,CAAEC,MAAOgB,EAAOF,MAAMG,SAG/ClB,EAAgB,CAAC,EAClB,EAyBOmB,YAAY,4BACZC,UAAQ,KAEV,SAAC3B,EAAD,CAAaoB,KAAK,SAASE,MAAM,oBAEX,IAAvBnB,EAAYyB,SACX,SAAC3B,EAAD,UACGE,EAAY0B,KAAI,SAAAC,GAAI,OACnB,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMtB,GAAvC,SACGkB,EAAKK,OAASL,EAAKT,QAFfS,EAAKE,GADK,QAW9B,C","sources":["API/API.js","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const MovieAPI = {\n  API_KEY: 'de43d67db1c628887eb86e6b3184ef59',\n  BASE_URL: `https://api.themoviedb.org/3/`,\n\n  getTrending: async () => {\n    const trendingForToday = await axios.get(\n      `${MovieAPI.BASE_URL}/trending/all/day?api_key=${MovieAPI.API_KEY}`\n    );\n\n    return await trendingForToday.data.results;\n  },\n\n  getMovieByName: async movieName => {\n    const movieByName = await axios.get(\n      `${MovieAPI.BASE_URL}search/movie?api_key=${MovieAPI.API_KEY}&query=${movieName}`\n    );\n    return movieByName.data.results;\n  },\n\n  getMovieDetails: async movieID => {\n    const movieDetails = await axios.get(\n      `${MovieAPI.BASE_URL}movie/${movieID}?api_key=${MovieAPI.API_KEY}`\n    );\n    return movieDetails.data;\n  },\n  getMovieCredits: async movieID => {\n    const movieCredits = await axios.get(\n      `${MovieAPI.BASE_URL}movie/${movieID}/credits?api_key=${MovieAPI.API_KEY}`\n    );\n    return movieCredits.data;\n  },\n\n  getMovieReviews: async movieID => {\n    const movieCredits = await axios.get(\n      `${MovieAPI.BASE_URL}movie/${movieID}/reviews?api_key=${MovieAPI.API_KEY}`\n    );\n    return movieCredits.data.results;\n  },\n};\n\n// (async () => {\n//   console.log(await MovieAPI.getMovieReviews('713704'));\n// })();\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  border: 2px solid black;\n  border-radius: 15px;\n  padding: 15px;\n  margin: 0 15px 0px 0;\n`;\n\nexport const SubmitInput = styled.input`\n  cursor: pointer;\n\n  border-radius: 15px;\n  padding: 15px;\n  border: 2px solid black;\n  &:hover,\n  &:focus {\n    background-color: transparent;\n  }\n`;\n\nexport const ResultsList = styled.ul`\n  margin: 0;\n  margin-top: 10px;\n  list-style: none;\n  padding: 0;\n\n  li:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  a {\n    color: #000000;\n    text-decoration: none;\n    &:hover,\n    :focus {\n      color: red;\n    }\n  }\n`;\n","import { MovieAPI } from 'API/API';\nimport { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { Input, ResultsList, SubmitInput } from './Movies.styled';\n\nconst Movies = () => {\n  const [resultsList, setResultsList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const query = searchParams.get('query') ?? '';\n  const [searchQuery, setSearchQuery] = useState(query);\n  const location = useLocation();\n\n  const handleInputChange = ({ target }) => {\n    if (target.value.trim() !== '') {\n      return setSearchParams({ query: target.value.trim() });\n    }\n\n    setSearchParams({});\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    (async () => {\n      setResultsList(await MovieAPI.getMovieByName(searchQuery));\n    })();\n  }, [searchQuery]);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    setSearchQuery(query);\n  };\n\n  return (\n    <>\n      <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          onChange={handleInputChange}\n          placeholder=\"input film name to search\"\n          required\n        />\n        <SubmitInput type=\"submit\" value=\"Find my film\" />\n      </form>\n      {resultsList.length !== 0 && (\n        <ResultsList>\n          {resultsList.map(film => (\n            <li key={film.id}>\n              <Link to={`${film.id}`} state={{ from: location }}>\n                {film.title || film.name}\n              </Link>\n            </li>\n          ))}\n        </ResultsList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieAPI","API_KEY","BASE_URL","getTrending","axios","trendingForToday","data","results","getMovieByName","movieName","movieByName","getMovieDetails","movieID","movieDetails","getMovieCredits","movieCredits","getMovieReviews","Input","styled","SubmitInput","ResultsList","useState","resultsList","setResultsList","useSearchParams","searchParams","setSearchParams","query","get","searchQuery","setSearchQuery","location","useLocation","useEffect","handleFormSubmit","event","preventDefault","autoComplete","onSubmit","type","name","value","onChange","target","trim","placeholder","required","length","map","film","to","id","state","from","title"],"sourceRoot":""}