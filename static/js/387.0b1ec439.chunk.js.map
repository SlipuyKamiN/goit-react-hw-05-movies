{"version":3,"file":"static/js/387.0b1ec439.chunk.js","mappings":"8MAEaA,EAAW,CACtBC,QAAS,mCACTC,SAAS,gCAETC,YAAY,WAAD,wBAAE,oGACoBC,EAAAA,EAAAA,IAAA,UACrBJ,EAASE,SADY,qCACyBF,EAASC,UAC9DI,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EAAME,QACvB,IALQ,cACLC,EADK,gBAOEA,EAAiBC,KAAKC,QAPxB,mFAAF,kDAAC,GAUZC,eAAe,WAAD,wBAAE,WAAMC,GAAN,uFACYT,EAAAA,EAAAA,IAAA,UAEnBJ,EAASE,SAFU,gCAEsBF,EAASC,QAF/B,kBAEgDY,IAEvER,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EAAME,QACvB,IAPW,cACRM,EADQ,yBAQPA,EAAYJ,KAAKC,SARV,2CAAF,mDAAC,GAWfI,gBAAgB,WAAD,wBAAE,WAAMC,GAAN,uFACYZ,EAAAA,EAAAA,IAAA,UACjBJ,EAASE,SADQ,iBACSc,EADT,oBAC4BhB,EAASC,UAC7DI,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EAAME,QACvB,IALY,cACTS,EADS,yBAMRA,EAAaP,MANL,2CAAF,mDAAC,GAQhBQ,gBAAgB,WAAD,wBAAE,WAAMF,GAAN,uFACYZ,EAAAA,EAAAA,IAAA,UAEpBJ,EAASE,SAFW,iBAEMc,EAFN,4BAEiChB,EAASC,UAElEI,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EAAME,QACvB,IAPY,cACTW,EADS,yBAQRA,EAAaT,MARL,2CAAF,mDAAC,GAWhBU,gBAAgB,WAAD,wBAAE,WAAMJ,GAAN,uFACYZ,EAAAA,EAAAA,IAAA,UAEpBJ,EAASE,SAFW,iBAEMc,EAFN,4BAEiChB,EAASC,UAElEI,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EAAME,QACvB,IAPY,cACTW,EADS,yBAQRA,EAAaT,KAAKC,SARV,2CAAF,mDAAC,G,oGC5CLU,E,OAAcC,EAAAA,GAAH,8H,SCkBxB,EAjBgB,WACd,OAAsBC,EAAAA,EAAAA,GAAS,WAAxBC,GAAP,eAEA,OACE,SAACH,EAAD,UAC0B,IAAvBG,EAAYC,OACT,2CACAD,EAAYE,KAAI,SAAAC,GAAM,OACpB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADI,KAQ/B,C,yHCdYP,EAAW,SAAAQ,GACtB,OAA0BC,EAAAA,EAAAA,UAAkB,YAATD,EAAqB,CAAC,EAAI,IAA7D,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA8BR,OA5BAE,EAAAA,EAAAA,YAAU,WACR,IACE,GAAa,SAATN,EAIF,YAHA,iBAAC,0FACCG,EADD,SACgBlC,EAAAA,EAAAA,gBAAyBmC,GADzC,4EAAD,GAMF,GAAa,YAATJ,EAIF,YAHA,iBAAC,0FACCG,EADD,SACgBlC,EAAAA,EAAAA,gBAAyBmC,GADzC,4EAAD,GAMF,GAAa,YAATJ,EAIF,YAHA,iBAAC,0FACCG,EADD,SACgBlC,EAAAA,EAAAA,gBAAyBmC,GADzC,4EAAD,EAQH,CAHC,MAAO7B,GAEP,MADAgC,QAAQC,IAAIjC,GACN,IAAIC,MAAMD,EAAME,QACvB,CACF,GAAE,CAAC2B,EAASJ,IAEN,CAACE,EACT,C","sources":["API/API.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","hooks/useMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const MovieAPI = {\n  API_KEY: 'de43d67db1c628887eb86e6b3184ef59',\n  BASE_URL: `https://api.themoviedb.org/3/`,\n\n  getTrending: async () => {\n    const trendingForToday = await axios\n      .get(`${MovieAPI.BASE_URL}/trending/all/day?api_key=${MovieAPI.API_KEY}`)\n      .catch(error => {\n        throw new Error(error.message);\n      });\n\n    return await trendingForToday.data.results;\n  },\n\n  getMovieByName: async movieName => {\n    const movieByName = await axios\n      .get(\n        `${MovieAPI.BASE_URL}search/movie?api_key=${MovieAPI.API_KEY}&query=${movieName}`\n      )\n      .catch(error => {\n        throw new Error(error.message);\n      });\n    return movieByName.data.results;\n  },\n\n  getMovieDetails: async movieID => {\n    const movieDetails = await axios\n      .get(`${MovieAPI.BASE_URL}movie/${movieID}?api_key=${MovieAPI.API_KEY}`)\n      .catch(error => {\n        throw new Error(error.message);\n      });\n    return movieDetails.data;\n  },\n  getMovieCredits: async movieID => {\n    const movieCredits = await axios\n      .get(\n        `${MovieAPI.BASE_URL}movie/${movieID}/credits?api_key=${MovieAPI.API_KEY}`\n      )\n      .catch(error => {\n        throw new Error(error.message);\n      });\n    return movieCredits.data;\n  },\n\n  getMovieReviews: async movieID => {\n    const movieCredits = await axios\n      .get(\n        `${MovieAPI.BASE_URL}movie/${movieID}/reviews?api_key=${MovieAPI.API_KEY}`\n      )\n      .catch(error => {\n        throw new Error(error.message);\n      });\n    return movieCredits.data.results;\n  },\n};\n\n// (async () => {\n//   console.log(await MovieAPI.getMovieReviews('713704'));\n// })();\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    border-bottom: 1px solid black;\n  }\n`;\n","import { useMovie } from 'hooks/useMovie';\nimport { ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviewsList] = useMovie('Reviews');\n\n  return (\n    <ReviewsList>\n      {reviewsList.length === 0\n        ? 'We don`t have any reviews for this movie'\n        : reviewsList.map(review => (\n            <li key={review.id}>\n              <h4>{review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MovieAPI } from 'API/API';\n\nexport const useMovie = type => {\n  const [state, setState] = useState(type === 'Details' ? {} : []);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    try {\n      if (type === 'Cast') {\n        (async () => {\n          setState(await MovieAPI.getMovieCredits(movieId));\n        })();\n        return;\n      }\n\n      if (type === 'Reviews') {\n        (async () => {\n          setState(await MovieAPI.getMovieReviews(movieId));\n        })();\n        return;\n      }\n\n      if (type === 'Details') {\n        (async () => {\n          setState(await MovieAPI.getMovieDetails(movieId));\n        })();\n        return;\n      }\n    } catch (error) {\n      console.log(error);\n      throw new Error(error.message);\n    }\n  }, [movieId, type]);\n\n  return [state];\n};\n"],"names":["MovieAPI","API_KEY","BASE_URL","getTrending","axios","catch","error","Error","message","trendingForToday","data","results","getMovieByName","movieName","movieByName","getMovieDetails","movieID","movieDetails","getMovieCredits","movieCredits","getMovieReviews","ReviewsList","styled","useMovie","reviewsList","length","map","review","author","content","id","type","useState","state","setState","movieId","useParams","useEffect","console","log"],"sourceRoot":""}